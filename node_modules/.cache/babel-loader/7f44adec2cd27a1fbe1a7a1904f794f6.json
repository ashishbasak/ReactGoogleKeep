{"ast":null,"code":"var _jsxFileName = \"/Users/b0206967/Desktop/Google Keep/keep/src/routes/Routes.js\";\n// BrowserRouter is the router implementation for HTML5 browsers (vs Native).\n// Link is your replacement for anchor tags.\n// Route is the conditionally shown component based on matching a path to a URL.\n// Switch returns only the first matching route rather than all matching routes.\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\nimport React from 'react';\n\nvar Home = function Home() {\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Home\");\n};\n\nvar About = function About() {\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"About\");\n}; // We give each route either a target `component`, or we can send functions in `render` or `children` \n// that return valid nodes. `children` always returns the given node whether there is a match or not.\n\n\nvar App = function App() {\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Home\"), ' ', React.createElement(Link, {\n    to: {\n      pathname: '/about'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"About\"), ' ', React.createElement(Link, {\n    to: \"/contact\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Contact\"), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    component: Home,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/about\",\n    component: About,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/contact\",\n    render: function render() {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Contact Us\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/blog\",\n    children: function children(_ref) {\n      var match = _ref.match;\n      return React.createElement(\"li\", {\n        className: match ? 'active' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/blog\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Blog\"));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Route, {\n    render: function render() {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Page not found\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))));\n};","map":{"version":3,"sources":["/Users/b0206967/Desktop/Google Keep/keep/src/routes/Routes.js"],"names":["BrowserRouter","Router","Link","Route","Switch","React","Home","About","App","pathname","match"],"mappings":";AAAA;AACA;AACA;AACA;AACA,SACIA,aAAa,IAAIC,MADrB,EAEIC,IAFJ,EAGIC,KAHJ,EAIIC,MAJJ,QAKS,kBALT;AAME,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,SAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAN;AAAA,CAAb;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAN;AAAA,CAAd,C,CAEA;AACA;;;AACA,IAAMC,GAAG,GAAG,SAANA,GAAM;AAAA,SACV,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAC2B,GAD3B,EAEE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAE+C,GAF/C,EAGE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,SAAS,EAAEH,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAEC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,MAAM,EAAE;AAAA,aAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAN;AAAA,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAME,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,QAAQ,EAAE;AAAA,UAAEG,KAAF,QAAEA,KAAF;AAAA,aAC5B;AAAI,QAAA,SAAS,EAAEA,KAAK,GAAG,QAAH,GAAc,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAD4B;AAAA,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAUE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAAA,aAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAN;AAAA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CALF,CADF,CADU;AAAA,CAAZ","sourcesContent":["// BrowserRouter is the router implementation for HTML5 browsers (vs Native).\n// Link is your replacement for anchor tags.\n// Route is the conditionally shown component based on matching a path to a URL.\n// Switch returns only the first matching route rather than all matching routes.\nimport {\n    BrowserRouter as Router,\n    Link,\n    Route,\n    Switch,\n  } from 'react-router-dom';\n  import React from 'react';\n  \n  const Home = () => <h1>Home</h1>;\n  const About = () => <h1>About</h1>;\n  \n  // We give each route either a target `component`, or we can send functions in `render` or `children` \n  // that return valid nodes. `children` always returns the given node whether there is a match or not.\n  const App = () => (\n    <Router>\n      <div>\n        <Link to=\"/\">Home</Link>{' '}\n        <Link to={{pathname: '/about'}}>About</Link>{' '}\n        <Link to=\"/contact\">Contact</Link>\n        \n        <Switch>\n          <Route path=\"/\" component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route\n            path=\"/contact\"\n            render={() => <h1>Contact Us</h1>} />\n          <Route path=\"/blog\" children={({match}) => (\n            <li className={match ? 'active' : ''}>\n              <Link to=\"/blog\">Blog</Link>\n            </li>)} />\n          <Route render={() => <h1>Page not found</h1>} />\n        </Switch>\n      </div>\n    </Router>\n  );"]},"metadata":{},"sourceType":"module"}